/*
 * Sales Order (A2X)
 *
 * In every API call, you can make use of the following operations:   - You can read entire sales orders or only parts of the data, using the provided filters.   - You can create sales orders. You can use deep insert requests, that is, you create a header plus at least one of the following entities: header partner, header partner address, header pricing element, header billing plan, header billing plan item, header text, payment plan, header related object, item, item partner, item partner address, item pricing element, item billing plan, item billing plan item, item text, and item related object.   If the header already exists, you can create the following sub-entities on their own: header partner, header pricing element, header text, payment plan, header related object, item partner, item pricing element, item text, and item related object.   - For existing sales orders, you can create new items. You can use deep insert requests, that is, you create an item plus at least one of the following entities: item partner, item partner address, item pricing element, item billing plan, item billing plan item, item text, and item related object. If the item already exists, you can create the following sub-entities on their own: item partner, item pricing element, item text, item related object, and item schedule line.   - For existing sales orders, you can update the following entities (that is, you can change the content of their properties): header, header partner, header partner address, header pricing element, header billing plan, header billing plan item, header text, payment plan, item, item partner, item partner address, item pricing element, item billing plan, item billing plan item, item text, and item schedule line.   - For existing sales orders, you can delete the following entities: header, header partner, header pricing element, header billing plan item, header text, payment plan, header related object, item, item partner, item pricing element, item billing plan item, item text, item related object, and item schedule line.   - You can accept or deny approval requests for sales orders that cannot be processed without the consent of an approver.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Client.Auth;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IItemPricingElementApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Reads the item pricing elements of all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the items of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper14</returns>
        Wrapper14 ASalesOrderItemPrElementGet(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the item pricing elements of all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the items of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper14</returns>
        ApiResponse<Wrapper14> ASalesOrderItemPrElementGetWithHttpInfo(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Creates an item pricing element.
        /// </summary>
        /// <remarks>
        /// Creates a pricing element for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPrElementType</returns>
        ASalesOrderItemPrElementType ASalesOrderItemPrElementPost(APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0);

        /// <summary>
        /// Creates an item pricing element.
        /// </summary>
        /// <remarks>
        /// Creates a pricing element for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPrElementType</returns>
        ApiResponse<ASalesOrderItemPrElementType> ASalesOrderItemPrElementPostWithHttpInfo(APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0);
        /// <summary>
        /// Deletes an item pricing element.
        /// </summary>
        /// <remarks>
        /// Deletes a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0);

        /// <summary>
        /// Deletes an item pricing element.
        /// </summary>
        /// <remarks>
        /// Deletes a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfo(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0);
        /// <summary>
        /// Reads the pricing element of a item with specific pricing details.
        /// </summary>
        /// <remarks>
        /// Reads a specific item pricing element of a specific sales order. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPrElementType</returns>
        ASalesOrderItemPrElementType ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the pricing element of a item with specific pricing details.
        /// </summary>
        /// <remarks>
        /// Reads a specific item pricing element of a specific sales order. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPrElementType</returns>
        ApiResponse<ASalesOrderItemPrElementType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfo(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Updates an item pricing element.
        /// </summary>
        /// <remarks>
        /// Updates a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderItemPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderItemPrElementType modifiedASalesOrderItemPrElementType, int operationIndex = 0);

        /// <summary>
        /// Updates an item pricing element.
        /// </summary>
        /// <remarks>
        /// Updates a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderItemPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfo(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderItemPrElementType modifiedASalesOrderItemPrElementType, int operationIndex = 0);
        /// <summary>
        /// Reads the sales order header for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderType</returns>
        ASalesOrderType ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the sales order header for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderType</returns>
        ApiResponse<ASalesOrderType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Reads the sales order item for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemType</returns>
        ASalesOrderItemType ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the sales order item for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemType</returns>
        ApiResponse<ASalesOrderItemType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetWithHttpInfo(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Reads the pricing element of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper14</returns>
        Wrapper14 ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the pricing element of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper14</returns>
        ApiResponse<Wrapper14> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetWithHttpInfo(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Creates a pricing element for a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPrElementType</returns>
        ASalesOrderItemPrElementType ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0);

        /// <summary>
        /// Creates a pricing element for a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPrElementType</returns>
        ApiResponse<ASalesOrderItemPrElementType> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPostWithHttpInfo(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IItemPricingElementApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Reads the item pricing elements of all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the items of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper14</returns>
        System.Threading.Tasks.Task<Wrapper14> ASalesOrderItemPrElementGetAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the item pricing elements of all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the items of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper14)</returns>
        System.Threading.Tasks.Task<ApiResponse<Wrapper14>> ASalesOrderItemPrElementGetWithHttpInfoAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Creates an item pricing element.
        /// </summary>
        /// <remarks>
        /// Creates a pricing element for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPrElementType</returns>
        System.Threading.Tasks.Task<ASalesOrderItemPrElementType> ASalesOrderItemPrElementPostAsync(APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Creates an item pricing element.
        /// </summary>
        /// <remarks>
        /// Creates a pricing element for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPrElementType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderItemPrElementType>> ASalesOrderItemPrElementPostWithHttpInfoAsync(APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Deletes an item pricing element.
        /// </summary>
        /// <remarks>
        /// Deletes a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Deletes an item pricing element.
        /// </summary>
        /// <remarks>
        /// Deletes a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfoAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the pricing element of a item with specific pricing details.
        /// </summary>
        /// <remarks>
        /// Reads a specific item pricing element of a specific sales order. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPrElementType</returns>
        System.Threading.Tasks.Task<ASalesOrderItemPrElementType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the pricing element of a item with specific pricing details.
        /// </summary>
        /// <remarks>
        /// Reads a specific item pricing element of a specific sales order. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPrElementType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderItemPrElementType>> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Updates an item pricing element.
        /// </summary>
        /// <remarks>
        /// Updates a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderItemPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderItemPrElementType modifiedASalesOrderItemPrElementType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Updates an item pricing element.
        /// </summary>
        /// <remarks>
        /// Updates a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderItemPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfoAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderItemPrElementType modifiedASalesOrderItemPrElementType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the sales order header for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderType</returns>
        System.Threading.Tasks.Task<ASalesOrderType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the sales order header for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderType>> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the sales order item for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemType</returns>
        System.Threading.Tasks.Task<ASalesOrderItemType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the sales order item for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderItemType>> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the pricing element of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper14</returns>
        System.Threading.Tasks.Task<Wrapper14> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetAsync(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the pricing element of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper14)</returns>
        System.Threading.Tasks.Task<ApiResponse<Wrapper14>> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Creates a pricing element for a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPrElementType</returns>
        System.Threading.Tasks.Task<ASalesOrderItemPrElementType> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPostAsync(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Creates a pricing element for a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPrElementType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderItemPrElementType>> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPostWithHttpInfoAsync(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IItemPricingElementApi : IItemPricingElementApiSync, IItemPricingElementApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ItemPricingElementApi : IItemPricingElementApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ItemPricingElementApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ItemPricingElementApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ItemPricingElementApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ItemPricingElementApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ItemPricingElementApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ItemPricingElementApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ItemPricingElementApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ItemPricingElementApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Reads the item pricing elements of all sales orders. Reads the pricing element data from the items of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper14</returns>
        public Wrapper14 ASalesOrderItemPrElementGet(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper14> localVarResponse = ASalesOrderItemPrElementGetWithHttpInfo(top, skip, filter, inlinecount, orderby, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the item pricing elements of all sales orders. Reads the pricing element data from the items of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper14</returns>
        public Org.OpenAPITools.Client.ApiResponse<Wrapper14> ASalesOrderItemPrElementGetWithHttpInfo(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<Wrapper14>("/A_SalesOrderItemPrElement", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the item pricing elements of all sales orders. Reads the pricing element data from the items of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper14</returns>
        public async System.Threading.Tasks.Task<Wrapper14> ASalesOrderItemPrElementGetAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper14> localVarResponse = await ASalesOrderItemPrElementGetWithHttpInfoAsync(top, skip, filter, inlinecount, orderby, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the item pricing elements of all sales orders. Reads the pricing element data from the items of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper14)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Wrapper14>> ASalesOrderItemPrElementGetWithHttpInfoAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Wrapper14>("/A_SalesOrderItemPrElement", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates an item pricing element. Creates a pricing element for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPrElementType</returns>
        public ASalesOrderItemPrElementType ASalesOrderItemPrElementPost(APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType> localVarResponse = ASalesOrderItemPrElementPostWithHttpInfo(aPISALESORDERSRVASalesOrderItemPrElementTypeCreate);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates an item pricing element. Creates a pricing element for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPrElementType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType> ASalesOrderItemPrElementPostWithHttpInfo(APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0)
        {
            // verify the required parameter 'aPISALESORDERSRVASalesOrderItemPrElementTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderItemPrElementTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderItemPrElementTypeCreate' when calling ItemPricingElementApi->ASalesOrderItemPrElementPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderItemPrElementTypeCreate;

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ASalesOrderItemPrElementType>("/A_SalesOrderItemPrElement", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates an item pricing element. Creates a pricing element for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPrElementType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderItemPrElementType> ASalesOrderItemPrElementPostAsync(APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType> localVarResponse = await ASalesOrderItemPrElementPostWithHttpInfoAsync(aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates an item pricing element. Creates a pricing element for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPrElementType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType>> ASalesOrderItemPrElementPostWithHttpInfoAsync(APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'aPISALESORDERSRVASalesOrderItemPrElementTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderItemPrElementTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderItemPrElementTypeCreate' when calling ItemPricingElementApi->ASalesOrderItemPrElementPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderItemPrElementTypeCreate;

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ASalesOrderItemPrElementType>("/A_SalesOrderItemPrElement", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Deletes an item pricing element. Deletes a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0)
        {
            ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfo(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter);
        }

        /// <summary>
        /// Deletes an item pricing element. Deletes a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Org.OpenAPITools.Client.ApiResponse<Object> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfo(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Deletes an item pricing element. Deletes a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            await ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfoAsync(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Deletes an item pricing element. Deletes a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Object>> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfoAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the pricing element of a item with specific pricing details. Reads a specific item pricing element of a specific sales order. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPrElementType</returns>
        public ASalesOrderItemPrElementType ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType> localVarResponse = ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfo(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the pricing element of a item with specific pricing details. Reads a specific item pricing element of a specific sales order. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPrElementType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfo(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ASalesOrderItemPrElementType>("/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the pricing element of a item with specific pricing details. Reads a specific item pricing element of a specific sales order. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPrElementType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderItemPrElementType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType> localVarResponse = await ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfoAsync(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the pricing element of a item with specific pricing details. Reads a specific item pricing element of a specific sales order. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPrElementType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType>> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ASalesOrderItemPrElementType>("/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates an item pricing element. Updates a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderItemPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderItemPrElementType modifiedASalesOrderItemPrElementType, int operationIndex = 0)
        {
            ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfo(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, modifiedASalesOrderItemPrElementType);
        }

        /// <summary>
        /// Updates an item pricing element. Updates a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderItemPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Org.OpenAPITools.Client.ApiResponse<Object> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfo(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderItemPrElementType modifiedASalesOrderItemPrElementType, int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'modifiedASalesOrderItemPrElementType' is set
            if (modifiedASalesOrderItemPrElementType == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'modifiedASalesOrderItemPrElementType' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            localVarRequestOptions.Data = modifiedASalesOrderItemPrElementType;

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Patch<Object>("/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates an item pricing element. Updates a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderItemPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderItemPrElementType modifiedASalesOrderItemPrElementType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            await ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfoAsync(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, modifiedASalesOrderItemPrElementType, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Updates an item pricing element. Updates a pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderItemPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Object>> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfoAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderItemPrElementType modifiedASalesOrderItemPrElementType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'modifiedASalesOrderItemPrElementType' is set
            if (modifiedASalesOrderItemPrElementType == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'modifiedASalesOrderItemPrElementType' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            localVarRequestOptions.Data = modifiedASalesOrderItemPrElementType;

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<Object>("/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the sales order header for a pricing element. Reads the sales order header data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderType</returns>
        public ASalesOrderType ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderType> localVarResponse = ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order header for a pricing element. Reads the sales order header data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ASalesOrderType>("/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')/to_SalesOrder", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the sales order header for a pricing element. Reads the sales order header data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderType> localVarResponse = await ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfoAsync(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order header for a pricing element. Reads the sales order header data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderType>> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ASalesOrderType>("/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')/to_SalesOrder", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the sales order item for a pricing element. Reads the sales order item data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemType</returns>
        public ASalesOrderItemType ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemType> localVarResponse = ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetWithHttpInfo(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order item for a pricing element. Reads the sales order item data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetWithHttpInfo(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ASalesOrderItemType>("/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')/to_SalesOrderItem", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the sales order item for a pricing element. Reads the sales order item data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderItemType> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemType> localVarResponse = await ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetWithHttpInfoAsync(salesOrder, salesOrderItem, pricingProcedureStep, pricingProcedureCounter, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order item for a pricing element. Reads the sales order item data for a specific pricing element of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemType>> ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling ItemPricingElementApi->ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ASalesOrderItemType>("/A_SalesOrderItemPrElement(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')/to_SalesOrderItem", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPrElementSalesOrderSalesOrderSalesOrderItemSalesOrderItemPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderItemGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the pricing element of a sales order item. Reads the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper14</returns>
        public Wrapper14 ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper14> localVarResponse = ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetWithHttpInfo(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the pricing element of a sales order item. Reads the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper14</returns>
        public Org.OpenAPITools.Client.ApiResponse<Wrapper14> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetWithHttpInfo(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<Wrapper14>("/A_SalesOrderItem(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}')/to_PricingElement", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the pricing element of a sales order item. Reads the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper14</returns>
        public async System.Threading.Tasks.Task<Wrapper14> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetAsync(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper14> localVarResponse = await ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetWithHttpInfoAsync(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the pricing element of a sales order item. Reads the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper14)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Wrapper14>> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Wrapper14>("/A_SalesOrderItem(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}')/to_PricingElement", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates a pricing element for a specific sales order item. Creates the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPrElementType</returns>
        public ASalesOrderItemPrElementType ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType> localVarResponse = ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPostWithHttpInfo(salesOrder, salesOrderItem, aPISALESORDERSRVASalesOrderItemPrElementTypeCreate);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates a pricing element for a specific sales order item. Creates the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPrElementType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPostWithHttpInfo(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost");
            }

            // verify the required parameter 'aPISALESORDERSRVASalesOrderItemPrElementTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderItemPrElementTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderItemPrElementTypeCreate' when calling ItemPricingElementApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderItemPrElementTypeCreate;

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ASalesOrderItemPrElementType>("/A_SalesOrderItem(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}')/to_PricingElement", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates a pricing element for a specific sales order item. Creates the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPrElementType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderItemPrElementType> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPostAsync(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType> localVarResponse = await ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPostWithHttpInfoAsync(salesOrder, salesOrderItem, aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates a pricing element for a specific sales order item. Creates the pricing element data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPrElementType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPrElementType>> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPostWithHttpInfoAsync(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPrElementTypeCreate aPISALESORDERSRVASalesOrderItemPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPricingElementApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPricingElementApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost");
            }

            // verify the required parameter 'aPISALESORDERSRVASalesOrderItemPrElementTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderItemPrElementTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderItemPrElementTypeCreate' when calling ItemPricingElementApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderItemPrElementTypeCreate;

            localVarRequestOptions.Operation = "ItemPricingElementApi.ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ASalesOrderItemPrElementType>("/A_SalesOrderItem(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}')/to_PricingElement", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPricingElementPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
