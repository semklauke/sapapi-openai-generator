/*
 * Sales Order (A2X)
 *
 * In every API call, you can make use of the following operations:   - You can read entire sales orders or only parts of the data, using the provided filters.   - You can create sales orders. You can use deep insert requests, that is, you create a header plus at least one of the following entities: header partner, header partner address, header pricing element, header billing plan, header billing plan item, header text, payment plan, header related object, item, item partner, item partner address, item pricing element, item billing plan, item billing plan item, item text, and item related object.   If the header already exists, you can create the following sub-entities on their own: header partner, header pricing element, header text, payment plan, header related object, item partner, item pricing element, item text, and item related object.   - For existing sales orders, you can create new items. You can use deep insert requests, that is, you create an item plus at least one of the following entities: item partner, item partner address, item pricing element, item billing plan, item billing plan item, item text, and item related object. If the item already exists, you can create the following sub-entities on their own: item partner, item pricing element, item text, item related object, and item schedule line.   - For existing sales orders, you can update the following entities (that is, you can change the content of their properties): header, header partner, header partner address, header pricing element, header billing plan, header billing plan item, header text, payment plan, item, item partner, item partner address, item pricing element, item billing plan, item billing plan item, item text, and item schedule line.   - For existing sales orders, you can delete the following entities: header, header partner, header pricing element, header billing plan item, header text, payment plan, header related object, item, item partner, item pricing element, item billing plan item, item text, item related object, and item schedule line.   - You can accept or deny approval requests for sales orders that cannot be processed without the consent of an approver.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Client.Auth;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IHeaderPricingElementApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Reads the header pricing elements of all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the headers of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper5</returns>
        Wrapper5 ASalesOrderHeaderPrElementGet(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the header pricing elements of all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the headers of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper5</returns>
        ApiResponse<Wrapper5> ASalesOrderHeaderPrElementGetWithHttpInfo(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Creates a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderHeaderPrElementType</returns>
        ASalesOrderHeaderPrElementType ASalesOrderHeaderPrElementPost(APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0);

        /// <summary>
        /// Creates a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderHeaderPrElementType</returns>
        ApiResponse<ASalesOrderHeaderPrElementType> ASalesOrderHeaderPrElementPostWithHttpInfo(APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0);
        /// <summary>
        /// Deletes a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Deletes the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0);

        /// <summary>
        /// Deletes a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Deletes the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfo(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0);
        /// <summary>
        /// Reads the header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderHeaderPrElementType</returns>
        ASalesOrderHeaderPrElementType ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderHeaderPrElementType</returns>
        ApiResponse<ASalesOrderHeaderPrElementType> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfo(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Updates a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Updates the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderHeaderPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderHeaderPrElementType modifiedASalesOrderHeaderPrElementType, int operationIndex = 0);

        /// <summary>
        /// Updates a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Updates the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderHeaderPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfo(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderHeaderPrElementType modifiedASalesOrderHeaderPrElementType, int operationIndex = 0);
        /// <summary>
        /// Reads the sales order header for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific pricing element. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderType</returns>
        ASalesOrderType ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the sales order header for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific pricing element. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderType</returns>
        ApiResponse<ASalesOrderType> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Reads the pricing element of a sales order.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the header of a specific sales order. Consumers must pass the sales order ID (key field).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper5</returns>
        Wrapper5 ASalesOrderSalesOrderToPricingElementGet(string salesOrder, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the pricing element of a sales order.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the header of a specific sales order. Consumers must pass the sales order ID (key field).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper5</returns>
        ApiResponse<Wrapper5> ASalesOrderSalesOrderToPricingElementGetWithHttpInfo(string salesOrder, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Creates a header pricing element for a specific sales order.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for a specific sales order header. Consumers must pass the sales order ID (key field).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderHeaderPrElementType</returns>
        ASalesOrderHeaderPrElementType ASalesOrderSalesOrderToPricingElementPost(string salesOrder, APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0);

        /// <summary>
        /// Creates a header pricing element for a specific sales order.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for a specific sales order header. Consumers must pass the sales order ID (key field).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderHeaderPrElementType</returns>
        ApiResponse<ASalesOrderHeaderPrElementType> ASalesOrderSalesOrderToPricingElementPostWithHttpInfo(string salesOrder, APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IHeaderPricingElementApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Reads the header pricing elements of all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the headers of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper5</returns>
        System.Threading.Tasks.Task<Wrapper5> ASalesOrderHeaderPrElementGetAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the header pricing elements of all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the headers of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper5)</returns>
        System.Threading.Tasks.Task<ApiResponse<Wrapper5>> ASalesOrderHeaderPrElementGetWithHttpInfoAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Creates a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderHeaderPrElementType</returns>
        System.Threading.Tasks.Task<ASalesOrderHeaderPrElementType> ASalesOrderHeaderPrElementPostAsync(APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Creates a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderHeaderPrElementType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderHeaderPrElementType>> ASalesOrderHeaderPrElementPostWithHttpInfoAsync(APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Deletes a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Deletes the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Deletes a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Deletes the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfoAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderHeaderPrElementType</returns>
        System.Threading.Tasks.Task<ASalesOrderHeaderPrElementType> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderHeaderPrElementType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderHeaderPrElementType>> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfoAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Updates a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Updates the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderHeaderPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderHeaderPrElementType modifiedASalesOrderHeaderPrElementType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Updates a header pricing element for a sales order.
        /// </summary>
        /// <remarks>
        /// Updates the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderHeaderPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfoAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderHeaderPrElementType modifiedASalesOrderHeaderPrElementType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the sales order header for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific pricing element. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderType</returns>
        System.Threading.Tasks.Task<ASalesOrderType> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the sales order header for a pricing element.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific pricing element. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderType>> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfoAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the pricing element of a sales order.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the header of a specific sales order. Consumers must pass the sales order ID (key field).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper5</returns>
        System.Threading.Tasks.Task<Wrapper5> ASalesOrderSalesOrderToPricingElementGetAsync(string salesOrder, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the pricing element of a sales order.
        /// </summary>
        /// <remarks>
        /// Reads the pricing element data from the header of a specific sales order. Consumers must pass the sales order ID (key field).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper5)</returns>
        System.Threading.Tasks.Task<ApiResponse<Wrapper5>> ASalesOrderSalesOrderToPricingElementGetWithHttpInfoAsync(string salesOrder, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Creates a header pricing element for a specific sales order.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for a specific sales order header. Consumers must pass the sales order ID (key field).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderHeaderPrElementType</returns>
        System.Threading.Tasks.Task<ASalesOrderHeaderPrElementType> ASalesOrderSalesOrderToPricingElementPostAsync(string salesOrder, APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Creates a header pricing element for a specific sales order.
        /// </summary>
        /// <remarks>
        /// Creates the pricing element data for a specific sales order header. Consumers must pass the sales order ID (key field).
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderHeaderPrElementType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderHeaderPrElementType>> ASalesOrderSalesOrderToPricingElementPostWithHttpInfoAsync(string salesOrder, APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IHeaderPricingElementApi : IHeaderPricingElementApiSync, IHeaderPricingElementApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class HeaderPricingElementApi : IHeaderPricingElementApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="HeaderPricingElementApi"/> class.
        /// </summary>
        /// <returns></returns>
        public HeaderPricingElementApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="HeaderPricingElementApi"/> class.
        /// </summary>
        /// <returns></returns>
        public HeaderPricingElementApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="HeaderPricingElementApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public HeaderPricingElementApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="HeaderPricingElementApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public HeaderPricingElementApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Reads the header pricing elements of all sales orders. Reads the pricing element data from the headers of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper5</returns>
        public Wrapper5 ASalesOrderHeaderPrElementGet(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper5> localVarResponse = ASalesOrderHeaderPrElementGetWithHttpInfo(top, skip, filter, inlinecount, orderby, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the header pricing elements of all sales orders. Reads the pricing element data from the headers of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper5</returns>
        public Org.OpenAPITools.Client.ApiResponse<Wrapper5> ASalesOrderHeaderPrElementGetWithHttpInfo(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<Wrapper5>("/A_SalesOrderHeaderPrElement", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the header pricing elements of all sales orders. Reads the pricing element data from the headers of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper5</returns>
        public async System.Threading.Tasks.Task<Wrapper5> ASalesOrderHeaderPrElementGetAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper5> localVarResponse = await ASalesOrderHeaderPrElementGetWithHttpInfoAsync(top, skip, filter, inlinecount, orderby, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the header pricing elements of all sales orders. Reads the pricing element data from the headers of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper5)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Wrapper5>> ASalesOrderHeaderPrElementGetWithHttpInfoAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Wrapper5>("/A_SalesOrderHeaderPrElement", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates a header pricing element for a sales order. Creates the pricing element data for the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderHeaderPrElementType</returns>
        public ASalesOrderHeaderPrElementType ASalesOrderHeaderPrElementPost(APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType> localVarResponse = ASalesOrderHeaderPrElementPostWithHttpInfo(aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates a header pricing element for a sales order. Creates the pricing element data for the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderHeaderPrElementType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType> ASalesOrderHeaderPrElementPostWithHttpInfo(APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0)
        {
            // verify the required parameter 'aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate;

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ASalesOrderHeaderPrElementType>("/A_SalesOrderHeaderPrElement", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates a header pricing element for a sales order. Creates the pricing element data for the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderHeaderPrElementType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderHeaderPrElementType> ASalesOrderHeaderPrElementPostAsync(APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType> localVarResponse = await ASalesOrderHeaderPrElementPostWithHttpInfoAsync(aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates a header pricing element for a sales order. Creates the pricing element data for the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderHeaderPrElementType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType>> ASalesOrderHeaderPrElementPostWithHttpInfoAsync(APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate;

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ASalesOrderHeaderPrElementType>("/A_SalesOrderHeaderPrElement", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Deletes a header pricing element for a sales order. Deletes the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0)
        {
            ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfo(salesOrder, pricingProcedureStep, pricingProcedureCounter);
        }

        /// <summary>
        /// Deletes a header pricing element for a sales order. Deletes the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Org.OpenAPITools.Client.ApiResponse<Object> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfo(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/A_SalesOrderHeaderPrElement(SalesOrder='{SalesOrder}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Deletes a header pricing element for a sales order. Deletes the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            await ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfoAsync(salesOrder, pricingProcedureStep, pricingProcedureCounter, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Deletes a header pricing element for a sales order. Deletes the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Object>> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDeleteWithHttpInfoAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/A_SalesOrderHeaderPrElement(SalesOrder='{SalesOrder}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the header pricing element for a sales order. Reads the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderHeaderPrElementType</returns>
        public ASalesOrderHeaderPrElementType ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType> localVarResponse = ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfo(salesOrder, pricingProcedureStep, pricingProcedureCounter, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the header pricing element for a sales order. Reads the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderHeaderPrElementType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfo(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ASalesOrderHeaderPrElementType>("/A_SalesOrderHeaderPrElement(SalesOrder='{SalesOrder}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the header pricing element for a sales order. Reads the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderHeaderPrElementType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderHeaderPrElementType> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType> localVarResponse = await ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfoAsync(salesOrder, pricingProcedureStep, pricingProcedureCounter, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the header pricing element for a sales order. Reads the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderHeaderPrElementType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType>> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGetWithHttpInfoAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ASalesOrderHeaderPrElementType>("/A_SalesOrderHeaderPrElement(SalesOrder='{SalesOrder}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates a header pricing element for a sales order. Updates the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderHeaderPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderHeaderPrElementType modifiedASalesOrderHeaderPrElementType, int operationIndex = 0)
        {
            ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfo(salesOrder, pricingProcedureStep, pricingProcedureCounter, modifiedASalesOrderHeaderPrElementType);
        }

        /// <summary>
        /// Updates a header pricing element for a sales order. Updates the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderHeaderPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Org.OpenAPITools.Client.ApiResponse<Object> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfo(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderHeaderPrElementType modifiedASalesOrderHeaderPrElementType, int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'modifiedASalesOrderHeaderPrElementType' is set
            if (modifiedASalesOrderHeaderPrElementType == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'modifiedASalesOrderHeaderPrElementType' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            localVarRequestOptions.Data = modifiedASalesOrderHeaderPrElementType;

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Patch<Object>("/A_SalesOrderHeaderPrElement(SalesOrder='{SalesOrder}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates a header pricing element for a sales order. Updates the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderHeaderPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderHeaderPrElementType modifiedASalesOrderHeaderPrElementType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            await ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfoAsync(salesOrder, pricingProcedureStep, pricingProcedureCounter, modifiedASalesOrderHeaderPrElementType, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Updates a header pricing element for a sales order. Updates the pricing element data from the header of a specific sales order. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="modifiedASalesOrderHeaderPrElementType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Object>> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatchWithHttpInfoAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, ModifiedASalesOrderHeaderPrElementType modifiedASalesOrderHeaderPrElementType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }

            // verify the required parameter 'modifiedASalesOrderHeaderPrElementType' is set
            if (modifiedASalesOrderHeaderPrElementType == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'modifiedASalesOrderHeaderPrElementType' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            localVarRequestOptions.Data = modifiedASalesOrderHeaderPrElementType;

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<Object>("/A_SalesOrderHeaderPrElement(SalesOrder='{SalesOrder}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterPatch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the sales order header for a pricing element. Reads the sales order header data for a specific pricing element. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderType</returns>
        public ASalesOrderType ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderType> localVarResponse = ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(salesOrder, pricingProcedureStep, pricingProcedureCounter, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order header for a pricing element. Reads the sales order header data for a specific pricing element. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderType> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfo(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ASalesOrderType>("/A_SalesOrderHeaderPrElement(SalesOrder='{SalesOrder}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')/to_SalesOrder", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the sales order header for a pricing element. Reads the sales order header data for a specific pricing element. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderType> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderType> localVarResponse = await ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfoAsync(salesOrder, pricingProcedureStep, pricingProcedureCounter, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order header for a pricing element. Reads the sales order header data for a specific pricing element. Consumers must pass the following key fields: sales order ID, pricing procedure step, and pricing procedure counter.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="pricingProcedureStep">Step Number</param>
        /// <param name="pricingProcedureCounter">Condition Counter</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderType>> ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGetWithHttpInfoAsync(string salesOrder, string pricingProcedureStep, string pricingProcedureCounter, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            // verify the required parameter 'pricingProcedureStep' is set
            if (pricingProcedureStep == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureStep' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }

            // verify the required parameter 'pricingProcedureCounter' is set
            if (pricingProcedureCounter == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'pricingProcedureCounter' when calling HeaderPricingElementApi->ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureStep", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureStep)); // path parameter
            localVarRequestOptions.PathParameters.Add("PricingProcedureCounter", Org.OpenAPITools.Client.ClientUtils.ParameterToString(pricingProcedureCounter)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ASalesOrderType>("/A_SalesOrderHeaderPrElement(SalesOrder='{SalesOrder}',PricingProcedureStep='{PricingProcedureStep}',PricingProcedureCounter='{PricingProcedureCounter}')/to_SalesOrder", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderHeaderPrElementSalesOrderSalesOrderPricingProcedureStepPricingProcedureStepPricingProcedureCounterPricingProcedureCounterToSalesOrderGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the pricing element of a sales order. Reads the pricing element data from the header of a specific sales order. Consumers must pass the sales order ID (key field).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper5</returns>
        public Wrapper5 ASalesOrderSalesOrderToPricingElementGet(string salesOrder, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper5> localVarResponse = ASalesOrderSalesOrderToPricingElementGetWithHttpInfo(salesOrder, top, skip, filter, inlinecount, orderby, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the pricing element of a sales order. Reads the pricing element data from the header of a specific sales order. Consumers must pass the sales order ID (key field).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper5</returns>
        public Org.OpenAPITools.Client.ApiResponse<Wrapper5> ASalesOrderSalesOrderToPricingElementGetWithHttpInfo(string salesOrder, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderSalesOrderToPricingElementGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderSalesOrderToPricingElementGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<Wrapper5>("/A_SalesOrder('{SalesOrder}')/to_PricingElement", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderSalesOrderToPricingElementGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the pricing element of a sales order. Reads the pricing element data from the header of a specific sales order. Consumers must pass the sales order ID (key field).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper5</returns>
        public async System.Threading.Tasks.Task<Wrapper5> ASalesOrderSalesOrderToPricingElementGetAsync(string salesOrder, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper5> localVarResponse = await ASalesOrderSalesOrderToPricingElementGetWithHttpInfoAsync(salesOrder, top, skip, filter, inlinecount, orderby, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the pricing element of a sales order. Reads the pricing element data from the header of a specific sales order. Consumers must pass the sales order ID (key field).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper5)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Wrapper5>> ASalesOrderSalesOrderToPricingElementGetWithHttpInfoAsync(string salesOrder, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderSalesOrderToPricingElementGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderSalesOrderToPricingElementGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Wrapper5>("/A_SalesOrder('{SalesOrder}')/to_PricingElement", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderSalesOrderToPricingElementGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates a header pricing element for a specific sales order. Creates the pricing element data for a specific sales order header. Consumers must pass the sales order ID (key field).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderHeaderPrElementType</returns>
        public ASalesOrderHeaderPrElementType ASalesOrderSalesOrderToPricingElementPost(string salesOrder, APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType> localVarResponse = ASalesOrderSalesOrderToPricingElementPostWithHttpInfo(salesOrder, aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates a header pricing element for a specific sales order. Creates the pricing element data for a specific sales order header. Consumers must pass the sales order ID (key field).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderHeaderPrElementType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType> ASalesOrderSalesOrderToPricingElementPostWithHttpInfo(string salesOrder, APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderSalesOrderToPricingElementPost");
            }

            // verify the required parameter 'aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate' when calling HeaderPricingElementApi->ASalesOrderSalesOrderToPricingElementPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate;

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderSalesOrderToPricingElementPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ASalesOrderHeaderPrElementType>("/A_SalesOrder('{SalesOrder}')/to_PricingElement", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderSalesOrderToPricingElementPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates a header pricing element for a specific sales order. Creates the pricing element data for a specific sales order header. Consumers must pass the sales order ID (key field).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderHeaderPrElementType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderHeaderPrElementType> ASalesOrderSalesOrderToPricingElementPostAsync(string salesOrder, APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType> localVarResponse = await ASalesOrderSalesOrderToPricingElementPostWithHttpInfoAsync(salesOrder, aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates a header pricing element for a specific sales order. Creates the pricing element data for a specific sales order header. Consumers must pass the sales order ID (key field).
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderHeaderPrElementType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderHeaderPrElementType>> ASalesOrderSalesOrderToPricingElementPostWithHttpInfoAsync(string salesOrder, APISALESORDERSRVASalesOrderHeaderPrElementTypeCreate aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling HeaderPricingElementApi->ASalesOrderSalesOrderToPricingElementPost");
            }

            // verify the required parameter 'aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate' when calling HeaderPricingElementApi->ASalesOrderSalesOrderToPricingElementPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderHeaderPrElementTypeCreate;

            localVarRequestOptions.Operation = "HeaderPricingElementApi.ASalesOrderSalesOrderToPricingElementPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ASalesOrderHeaderPrElementType>("/A_SalesOrder('{SalesOrder}')/to_PricingElement", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderSalesOrderToPricingElementPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
