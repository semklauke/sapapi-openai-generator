/*
 * Sales Order (A2X)
 *
 * In every API call, you can make use of the following operations:   - You can read entire sales orders or only parts of the data, using the provided filters.   - You can create sales orders. You can use deep insert requests, that is, you create a header plus at least one of the following entities: header partner, header partner address, header pricing element, header billing plan, header billing plan item, header text, payment plan, header related object, item, item partner, item partner address, item pricing element, item billing plan, item billing plan item, item text, and item related object.   If the header already exists, you can create the following sub-entities on their own: header partner, header pricing element, header text, payment plan, header related object, item partner, item pricing element, item text, and item related object.   - For existing sales orders, you can create new items. You can use deep insert requests, that is, you create an item plus at least one of the following entities: item partner, item partner address, item pricing element, item billing plan, item billing plan item, item text, and item related object. If the item already exists, you can create the following sub-entities on their own: item partner, item pricing element, item text, item related object, and item schedule line.   - For existing sales orders, you can update the following entities (that is, you can change the content of their properties): header, header partner, header partner address, header pricing element, header billing plan, header billing plan item, header text, payment plan, item, item partner, item partner address, item pricing element, item billing plan, item billing plan item, item text, and item schedule line.   - For existing sales orders, you can delete the following entities: header, header partner, header pricing element, header billing plan item, header text, payment plan, header related object, item, item partner, item pricing element, item billing plan item, item text, item related object, and item schedule line.   - You can accept or deny approval requests for sales orders that cannot be processed without the consent of an approver.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using Org.OpenAPITools.Client;
using Org.OpenAPITools.Client.Auth;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IItemPartnerApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Reads the sales order item partner for an item partner address.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item partner data for a specific item partner address. Consumers must pass the following key fields: sales order ID, item number, partner function, and the address representation code.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales and Distribution Document Number</param>
        /// <param name="salesOrderItem">Item number of the SD document</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="addressRepresentationCode">Version ID for International Addresses</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPartnerType</returns>
        ASalesOrderItemPartnerType ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet(string salesOrder, string salesOrderItem, string partnerFunction, string addressRepresentationCode, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the sales order item partner for an item partner address.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item partner data for a specific item partner address. Consumers must pass the following key fields: sales order ID, item number, partner function, and the address representation code.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales and Distribution Document Number</param>
        /// <param name="salesOrderItem">Item number of the SD document</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="addressRepresentationCode">Version ID for International Addresses</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPartnerType</returns>
        ApiResponse<ASalesOrderItemPartnerType> ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGetWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, string addressRepresentationCode, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Reads the item partners for all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the partner data from the items of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper12</returns>
        Wrapper12 ASalesOrderItemPartnerGet(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the item partners for all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the partner data from the items of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper12</returns>
        ApiResponse<Wrapper12> ASalesOrderItemPartnerGetWithHttpInfo(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Creates a partner for a sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Creates an item partner with a specific partner function for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPartnerType</returns>
        ASalesOrderItemPartnerType ASalesOrderItemPartnerPost(APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0);

        /// <summary>
        /// Creates a partner for a sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Creates an item partner with a specific partner function for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPartnerType</returns>
        ApiResponse<ASalesOrderItemPartnerType> ASalesOrderItemPartnerPostWithHttpInfo(APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0);
        /// <summary>
        /// Deletes a partner of a specific sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Deletes an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete(string salesOrder, string salesOrderItem, string partnerFunction, int operationIndex = 0);

        /// <summary>
        /// Deletes a partner of a specific sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Deletes an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDeleteWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, int operationIndex = 0);
        /// <summary>
        /// Reads an item partner of an item with a specific partner function in a specific sales order.
        /// </summary>
        /// <remarks>
        /// Reads an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPartnerType</returns>
        ASalesOrderItemPartnerType ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads an item partner of an item with a specific partner function in a specific sales order.
        /// </summary>
        /// <remarks>
        /// Reads an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPartnerType</returns>
        ApiResponse<ASalesOrderItemPartnerType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGetWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Updates a partner of a sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Updates an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="modifiedASalesOrderItemPartnerType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        void ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch(string salesOrder, string salesOrderItem, string partnerFunction, ModifiedASalesOrderItemPartnerType modifiedASalesOrderItemPartnerType, int operationIndex = 0);

        /// <summary>
        /// Updates a partner of a sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Updates an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="modifiedASalesOrderItemPartnerType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatchWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, ModifiedASalesOrderItemPartnerType modifiedASalesOrderItemPartnerType, int operationIndex = 0);
        /// <summary>
        /// Reads the item address of a sales order item partner.
        /// </summary>
        /// <remarks>
        /// Reads the item address data for a specific sales order item partner. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper21</returns>
        Wrapper21 ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet(string salesOrder, string salesOrderItem, string partnerFunction, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the item address of a sales order item partner.
        /// </summary>
        /// <remarks>
        /// Reads the item address data for a specific sales order item partner. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper21</returns>
        ApiResponse<Wrapper21> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGetWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Reads the sales order header of a partner function of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderType</returns>
        ASalesOrderType ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the sales order header of a partner function of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderType</returns>
        ApiResponse<ASalesOrderType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Reads the sales order item for a partner function of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemType</returns>
        ASalesOrderItemType ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the sales order item for a partner function of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemType</returns>
        ApiResponse<ASalesOrderItemType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGetWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Reads the item partners of a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper12</returns>
        Wrapper12 ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGet(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);

        /// <summary>
        /// Reads the item partners of a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper12</returns>
        ApiResponse<Wrapper12> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGetWithHttpInfo(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0);
        /// <summary>
        /// Creates an item partner for a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Creates the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPartnerType</returns>
        ASalesOrderItemPartnerType ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0);

        /// <summary>
        /// Creates an item partner for a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Creates the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPartnerType</returns>
        ApiResponse<ASalesOrderItemPartnerType> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPostWithHttpInfo(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IItemPartnerApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Reads the sales order item partner for an item partner address.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item partner data for a specific item partner address. Consumers must pass the following key fields: sales order ID, item number, partner function, and the address representation code.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales and Distribution Document Number</param>
        /// <param name="salesOrderItem">Item number of the SD document</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="addressRepresentationCode">Version ID for International Addresses</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPartnerType</returns>
        System.Threading.Tasks.Task<ASalesOrderItemPartnerType> ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGetAsync(string salesOrder, string salesOrderItem, string partnerFunction, string addressRepresentationCode, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the sales order item partner for an item partner address.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item partner data for a specific item partner address. Consumers must pass the following key fields: sales order ID, item number, partner function, and the address representation code.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales and Distribution Document Number</param>
        /// <param name="salesOrderItem">Item number of the SD document</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="addressRepresentationCode">Version ID for International Addresses</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPartnerType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderItemPartnerType>> ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, string addressRepresentationCode, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the item partners for all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the partner data from the items of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper12</returns>
        System.Threading.Tasks.Task<Wrapper12> ASalesOrderItemPartnerGetAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the item partners for all sales orders.
        /// </summary>
        /// <remarks>
        /// Reads the partner data from the items of all sales orders in the system.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper12)</returns>
        System.Threading.Tasks.Task<ApiResponse<Wrapper12>> ASalesOrderItemPartnerGetWithHttpInfoAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Creates a partner for a sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Creates an item partner with a specific partner function for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPartnerType</returns>
        System.Threading.Tasks.Task<ASalesOrderItemPartnerType> ASalesOrderItemPartnerPostAsync(APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Creates a partner for a sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Creates an item partner with a specific partner function for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPartnerType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderItemPartnerType>> ASalesOrderItemPartnerPostWithHttpInfoAsync(APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Deletes a partner of a specific sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Deletes an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDeleteAsync(string salesOrder, string salesOrderItem, string partnerFunction, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Deletes a partner of a specific sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Deletes an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDeleteWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads an item partner of an item with a specific partner function in a specific sales order.
        /// </summary>
        /// <remarks>
        /// Reads an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPartnerType</returns>
        System.Threading.Tasks.Task<ASalesOrderItemPartnerType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGetAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads an item partner of an item with a specific partner function in a specific sales order.
        /// </summary>
        /// <remarks>
        /// Reads an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPartnerType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderItemPartnerType>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Updates a partner of a sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Updates an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="modifiedASalesOrderItemPartnerType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatchAsync(string salesOrder, string salesOrderItem, string partnerFunction, ModifiedASalesOrderItemPartnerType modifiedASalesOrderItemPartnerType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Updates a partner of a sales order item with a specific partner function.
        /// </summary>
        /// <remarks>
        /// Updates an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="modifiedASalesOrderItemPartnerType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatchWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, ModifiedASalesOrderItemPartnerType modifiedASalesOrderItemPartnerType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the item address of a sales order item partner.
        /// </summary>
        /// <remarks>
        /// Reads the item address data for a specific sales order item partner. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper21</returns>
        System.Threading.Tasks.Task<Wrapper21> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGetAsync(string salesOrder, string salesOrderItem, string partnerFunction, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the item address of a sales order item partner.
        /// </summary>
        /// <remarks>
        /// Reads the item address data for a specific sales order item partner. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper21)</returns>
        System.Threading.Tasks.Task<ApiResponse<Wrapper21>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the sales order header of a partner function of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderType</returns>
        System.Threading.Tasks.Task<ASalesOrderType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the sales order header of a partner function of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the sales order header data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderType>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the sales order item for a partner function of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemType</returns>
        System.Threading.Tasks.Task<ASalesOrderItemType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGetAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the sales order item for a partner function of a sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the sales order item data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderItemType>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Reads the item partners of a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper12</returns>
        System.Threading.Tasks.Task<Wrapper12> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGetAsync(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Reads the item partners of a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Reads the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper12)</returns>
        System.Threading.Tasks.Task<ApiResponse<Wrapper12>> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        /// <summary>
        /// Creates an item partner for a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Creates the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPartnerType</returns>
        System.Threading.Tasks.Task<ASalesOrderItemPartnerType> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPostAsync(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));

        /// <summary>
        /// Creates an item partner for a specific sales order item.
        /// </summary>
        /// <remarks>
        /// Creates the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </remarks>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPartnerType)</returns>
        System.Threading.Tasks.Task<ApiResponse<ASalesOrderItemPartnerType>> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPostWithHttpInfoAsync(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IItemPartnerApi : IItemPartnerApiSync, IItemPartnerApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class ItemPartnerApi : IItemPartnerApi
    {
        private Org.OpenAPITools.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="ItemPartnerApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ItemPartnerApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ItemPartnerApi"/> class.
        /// </summary>
        /// <returns></returns>
        public ItemPartnerApi(string basePath)
        {
            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                new Org.OpenAPITools.Client.Configuration { BasePath = basePath }
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ItemPartnerApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public ItemPartnerApi(Org.OpenAPITools.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = Org.OpenAPITools.Client.Configuration.MergeConfigurations(
                Org.OpenAPITools.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new Org.OpenAPITools.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ItemPartnerApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public ItemPartnerApi(Org.OpenAPITools.Client.ISynchronousClient client, Org.OpenAPITools.Client.IAsynchronousClient asyncClient, Org.OpenAPITools.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = Org.OpenAPITools.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public Org.OpenAPITools.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public Org.OpenAPITools.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public Org.OpenAPITools.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public Org.OpenAPITools.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Reads the sales order item partner for an item partner address. Reads the sales order item partner data for a specific item partner address. Consumers must pass the following key fields: sales order ID, item number, partner function, and the address representation code.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales and Distribution Document Number</param>
        /// <param name="salesOrderItem">Item number of the SD document</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="addressRepresentationCode">Version ID for International Addresses</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPartnerType</returns>
        public ASalesOrderItemPartnerType ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet(string salesOrder, string salesOrderItem, string partnerFunction, string addressRepresentationCode, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> localVarResponse = ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGetWithHttpInfo(salesOrder, salesOrderItem, partnerFunction, addressRepresentationCode, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order item partner for an item partner address. Reads the sales order item partner data for a specific item partner address. Consumers must pass the following key fields: sales order ID, item number, partner function, and the address representation code.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales and Distribution Document Number</param>
        /// <param name="salesOrderItem">Item number of the SD document</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="addressRepresentationCode">Version ID for International Addresses</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPartnerType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGetWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, string addressRepresentationCode, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet");
            }

            // verify the required parameter 'addressRepresentationCode' is set
            if (addressRepresentationCode == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'addressRepresentationCode' when calling ItemPartnerApi->ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            localVarRequestOptions.PathParameters.Add("AddressRepresentationCode", Org.OpenAPITools.Client.ClientUtils.ParameterToString(addressRepresentationCode)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ASalesOrderItemPartnerType>("/A_SalesOrderItemPartnerAddress(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}',AddressRepresentationCode='{AddressRepresentationCode}')/to_Partner", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the sales order item partner for an item partner address. Reads the sales order item partner data for a specific item partner address. Consumers must pass the following key fields: sales order ID, item number, partner function, and the address representation code.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales and Distribution Document Number</param>
        /// <param name="salesOrderItem">Item number of the SD document</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="addressRepresentationCode">Version ID for International Addresses</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPartnerType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderItemPartnerType> ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGetAsync(string salesOrder, string salesOrderItem, string partnerFunction, string addressRepresentationCode, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> localVarResponse = await ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGetWithHttpInfoAsync(salesOrder, salesOrderItem, partnerFunction, addressRepresentationCode, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order item partner for an item partner address. Reads the sales order item partner data for a specific item partner address. Consumers must pass the following key fields: sales order ID, item number, partner function, and the address representation code.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales and Distribution Document Number</param>
        /// <param name="salesOrderItem">Item number of the SD document</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="addressRepresentationCode">Version ID for International Addresses</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPartnerType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType>> ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, string addressRepresentationCode, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet");
            }

            // verify the required parameter 'addressRepresentationCode' is set
            if (addressRepresentationCode == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'addressRepresentationCode' when calling ItemPartnerApi->ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            localVarRequestOptions.PathParameters.Add("AddressRepresentationCode", Org.OpenAPITools.Client.ClientUtils.ParameterToString(addressRepresentationCode)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ASalesOrderItemPartnerType>("/A_SalesOrderItemPartnerAddress(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}',AddressRepresentationCode='{AddressRepresentationCode}')/to_Partner", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerAddressSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionAddressRepresentationCodeAddressRepresentationCodeToPartnerGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the item partners for all sales orders. Reads the partner data from the items of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper12</returns>
        public Wrapper12 ASalesOrderItemPartnerGet(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper12> localVarResponse = ASalesOrderItemPartnerGetWithHttpInfo(top, skip, filter, inlinecount, orderby, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the item partners for all sales orders. Reads the partner data from the items of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper12</returns>
        public Org.OpenAPITools.Client.ApiResponse<Wrapper12> ASalesOrderItemPartnerGetWithHttpInfo(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<Wrapper12>("/A_SalesOrderItemPartner", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the item partners for all sales orders. Reads the partner data from the items of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper12</returns>
        public async System.Threading.Tasks.Task<Wrapper12> ASalesOrderItemPartnerGetAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper12> localVarResponse = await ASalesOrderItemPartnerGetWithHttpInfoAsync(top, skip, filter, inlinecount, orderby, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the item partners for all sales orders. Reads the partner data from the items of all sales orders in the system.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper12)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Wrapper12>> ASalesOrderItemPartnerGetWithHttpInfoAsync(int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Wrapper12>("/A_SalesOrderItemPartner", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates a partner for a sales order item with a specific partner function. Creates an item partner with a specific partner function for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPartnerType</returns>
        public ASalesOrderItemPartnerType ASalesOrderItemPartnerPost(APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> localVarResponse = ASalesOrderItemPartnerPostWithHttpInfo(aPISALESORDERSRVASalesOrderItemPartnerTypeCreate);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates a partner for a sales order item with a specific partner function. Creates an item partner with a specific partner function for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPartnerType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> ASalesOrderItemPartnerPostWithHttpInfo(APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0)
        {
            // verify the required parameter 'aPISALESORDERSRVASalesOrderItemPartnerTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderItemPartnerTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderItemPartnerTypeCreate' when calling ItemPartnerApi->ASalesOrderItemPartnerPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderItemPartnerTypeCreate;

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ASalesOrderItemPartnerType>("/A_SalesOrderItemPartner", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates a partner for a sales order item with a specific partner function. Creates an item partner with a specific partner function for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPartnerType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderItemPartnerType> ASalesOrderItemPartnerPostAsync(APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> localVarResponse = await ASalesOrderItemPartnerPostWithHttpInfoAsync(aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates a partner for a sales order item with a specific partner function. Creates an item partner with a specific partner function for a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPartnerType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType>> ASalesOrderItemPartnerPostWithHttpInfoAsync(APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'aPISALESORDERSRVASalesOrderItemPartnerTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderItemPartnerTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderItemPartnerTypeCreate' when calling ItemPartnerApi->ASalesOrderItemPartnerPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderItemPartnerTypeCreate;

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ASalesOrderItemPartnerType>("/A_SalesOrderItemPartner", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Deletes a partner of a specific sales order item with a specific partner function. Deletes an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete(string salesOrder, string salesOrderItem, string partnerFunction, int operationIndex = 0)
        {
            ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDeleteWithHttpInfo(salesOrder, salesOrderItem, partnerFunction);
        }

        /// <summary>
        /// Deletes a partner of a specific sales order item with a specific partner function. Deletes an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Org.OpenAPITools.Client.ApiResponse<Object> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDeleteWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Deletes a partner of a specific sales order item with a specific partner function. Deletes an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDeleteAsync(string salesOrder, string salesOrderItem, string partnerFunction, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            await ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDeleteWithHttpInfoAsync(salesOrder, salesOrderItem, partnerFunction, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Deletes a partner of a specific sales order item with a specific partner function. Deletes an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Object>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDeleteWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads an item partner of an item with a specific partner function in a specific sales order. Reads an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPartnerType</returns>
        public ASalesOrderItemPartnerType ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> localVarResponse = ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGetWithHttpInfo(salesOrder, salesOrderItem, partnerFunction, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads an item partner of an item with a specific partner function in a specific sales order. Reads an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPartnerType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGetWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ASalesOrderItemPartnerType>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads an item partner of an item with a specific partner function in a specific sales order. Reads an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPartnerType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderItemPartnerType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGetAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> localVarResponse = await ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGetWithHttpInfoAsync(salesOrder, salesOrderItem, partnerFunction, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads an item partner of an item with a specific partner function in a specific sales order. Reads an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPartnerType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ASalesOrderItemPartnerType>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates a partner of a sales order item with a specific partner function. Updates an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="modifiedASalesOrderItemPartnerType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns></returns>
        public void ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch(string salesOrder, string salesOrderItem, string partnerFunction, ModifiedASalesOrderItemPartnerType modifiedASalesOrderItemPartnerType, int operationIndex = 0)
        {
            ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatchWithHttpInfo(salesOrder, salesOrderItem, partnerFunction, modifiedASalesOrderItemPartnerType);
        }

        /// <summary>
        /// Updates a partner of a sales order item with a specific partner function. Updates an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="modifiedASalesOrderItemPartnerType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public Org.OpenAPITools.Client.ApiResponse<Object> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatchWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, ModifiedASalesOrderItemPartnerType modifiedASalesOrderItemPartnerType, int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch");
            }

            // verify the required parameter 'modifiedASalesOrderItemPartnerType' is set
            if (modifiedASalesOrderItemPartnerType == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'modifiedASalesOrderItemPartnerType' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            localVarRequestOptions.Data = modifiedASalesOrderItemPartnerType;

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Patch<Object>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Updates a partner of a sales order item with a specific partner function. Updates an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="modifiedASalesOrderItemPartnerType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatchAsync(string salesOrder, string salesOrderItem, string partnerFunction, ModifiedASalesOrderItemPartnerType modifiedASalesOrderItemPartnerType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            await ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatchWithHttpInfoAsync(salesOrder, salesOrderItem, partnerFunction, modifiedASalesOrderItemPartnerType, operationIndex, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Updates a partner of a sales order item with a specific partner function. Updates an item partner with a specific partner function of a specific sales order item. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="modifiedASalesOrderItemPartnerType">New property values</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Object>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatchWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, ModifiedASalesOrderItemPartnerType modifiedASalesOrderItemPartnerType, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch");
            }

            // verify the required parameter 'modifiedASalesOrderItemPartnerType' is set
            if (modifiedASalesOrderItemPartnerType == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'modifiedASalesOrderItemPartnerType' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            localVarRequestOptions.Data = modifiedASalesOrderItemPartnerType;

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<Object>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionPatch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the item address of a sales order item partner. Reads the item address data for a specific sales order item partner. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper21</returns>
        public Wrapper21 ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet(string salesOrder, string salesOrderItem, string partnerFunction, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper21> localVarResponse = ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGetWithHttpInfo(salesOrder, salesOrderItem, partnerFunction, top, skip, filter, inlinecount, orderby, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the item address of a sales order item partner. Reads the item address data for a specific sales order item partner. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper21</returns>
        public Org.OpenAPITools.Client.ApiResponse<Wrapper21> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGetWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<Wrapper21>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')/to_Address", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the item address of a sales order item partner. Reads the item address data for a specific sales order item partner. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper21</returns>
        public async System.Threading.Tasks.Task<Wrapper21> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGetAsync(string salesOrder, string salesOrderItem, string partnerFunction, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper21> localVarResponse = await ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGetWithHttpInfoAsync(salesOrder, salesOrderItem, partnerFunction, top, skip, filter, inlinecount, orderby, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the item address of a sales order item partner. Reads the item address data for a specific sales order item partner. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper21)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Wrapper21>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Wrapper21>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')/to_Address", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToAddressGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the sales order header of a partner function of a sales order item. Reads the sales order header data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderType</returns>
        public ASalesOrderType ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderType> localVarResponse = ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfo(salesOrder, salesOrderItem, partnerFunction, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order header of a partner function of a sales order item. Reads the sales order header data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ASalesOrderType>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')/to_SalesOrder", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the sales order header of a partner function of a sales order item. Reads the sales order header data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderType> localVarResponse = await ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfoAsync(salesOrder, salesOrderItem, partnerFunction, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order header of a partner function of a sales order item. Reads the sales order header data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderType>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ASalesOrderType>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')/to_SalesOrder", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the sales order item for a partner function of a sales order item. Reads the sales order item data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemType</returns>
        public ASalesOrderItemType ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemType> localVarResponse = ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGetWithHttpInfo(salesOrder, salesOrderItem, partnerFunction, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order item for a partner function of a sales order item. Reads the sales order item data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGetWithHttpInfo(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<ASalesOrderItemType>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')/to_SalesOrderItem", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the sales order item for a partner function of a sales order item. Reads the sales order item data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderItemType> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGetAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemType> localVarResponse = await ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGetWithHttpInfoAsync(salesOrder, salesOrderItem, partnerFunction, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the sales order item for a partner function of a sales order item. Reads the sales order item data for a specific item partner function. Consumers must pass the following key fields: sales order ID, item number, and partner function.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="partnerFunction">Partner Function</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemType>> ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, string partnerFunction, List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet");
            }

            // verify the required parameter 'partnerFunction' is set
            if (partnerFunction == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'partnerFunction' when calling ItemPartnerApi->ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.PathParameters.Add("PartnerFunction", Org.OpenAPITools.Client.ClientUtils.ParameterToString(partnerFunction)); // path parameter
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<ASalesOrderItemType>("/A_SalesOrderItemPartner(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}',PartnerFunction='{PartnerFunction}')/to_SalesOrderItem", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemPartnerSalesOrderSalesOrderSalesOrderItemSalesOrderItemPartnerFunctionPartnerFunctionToSalesOrderItemGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the item partners of a specific sales order item. Reads the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>Wrapper12</returns>
        public Wrapper12 ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGet(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper12> localVarResponse = ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGetWithHttpInfo(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select, expand);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the item partners of a specific sales order item. Reads the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of Wrapper12</returns>
        public Org.OpenAPITools.Client.ApiResponse<Wrapper12> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGetWithHttpInfo(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGet");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<Wrapper12>("/A_SalesOrderItem(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}')/to_Partner", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Reads the item partners of a specific sales order item. Reads the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of Wrapper12</returns>
        public async System.Threading.Tasks.Task<Wrapper12> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGetAsync(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<Wrapper12> localVarResponse = await ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGetWithHttpInfoAsync(salesOrder, salesOrderItem, top, skip, filter, inlinecount, orderby, select, expand, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Reads the item partners of a specific sales order item. Reads the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="top">Show only the first n items, see [Paging - Top](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;66) (optional)</param>
        /// <param name="skip">Skip the first n items, see [Paging - Skip](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="filter">Filter items by property values, see [Filtering](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;64) (optional)</param>
        /// <param name="inlinecount">Include count of items, see [Inlinecount](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;67) (optional)</param>
        /// <param name="orderby">Order items by property values, see [Sorting](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;65) (optional)</param>
        /// <param name="select">Select properties to be returned, see [Select](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;68) (optional)</param>
        /// <param name="expand">Expand related entities, see [Expand](https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page&#x3D;63) (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (Wrapper12)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<Wrapper12>> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGetWithHttpInfoAsync(string salesOrder, string salesOrderItem, int? top = default(int?), int? skip = default(int?), string? filter = default(string?), string? inlinecount = default(string?), List<string>? orderby = default(List<string>?), List<string>? select = default(List<string>?), List<string>? expand = default(List<string>?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGet");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGet");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            if (top != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$top", top));
            }
            if (skip != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$skip", skip));
            }
            if (filter != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$filter", filter));
            }
            if (inlinecount != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("", "$inlinecount", inlinecount));
            }
            if (orderby != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$orderby", orderby));
            }
            if (select != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$select", select));
            }
            if (expand != null)
            {
                localVarRequestOptions.QueryParameters.Add(Org.OpenAPITools.Client.ClientUtils.ParameterToMultiMap("csv", "$expand", expand));
            }

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<Wrapper12>("/A_SalesOrderItem(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}')/to_Partner", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates an item partner for a specific sales order item. Creates the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ASalesOrderItemPartnerType</returns>
        public ASalesOrderItemPartnerType ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0)
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> localVarResponse = ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPostWithHttpInfo(salesOrder, salesOrderItem, aPISALESORDERSRVASalesOrderItemPartnerTypeCreate);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates an item partner for a specific sales order item. Creates the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of ASalesOrderItemPartnerType</returns>
        public Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPostWithHttpInfo(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0)
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost");
            }

            // verify the required parameter 'aPISALESORDERSRVASalesOrderItemPartnerTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderItemPartnerTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderItemPartnerTypeCreate' when calling ItemPartnerApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost");
            }

            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderItemPartnerTypeCreate;

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<ASalesOrderItemPartnerType>("/A_SalesOrderItem(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}')/to_Partner", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Creates an item partner for a specific sales order item. Creates the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ASalesOrderItemPartnerType</returns>
        public async System.Threading.Tasks.Task<ASalesOrderItemPartnerType> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPostAsync(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType> localVarResponse = await ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPostWithHttpInfoAsync(salesOrder, salesOrderItem, aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Creates an item partner for a specific sales order item. Creates the partner data for a specific item of a specific sales order. Consumers must pass the following key fields: sales order ID and item number.
        /// </summary>
        /// <exception cref="Org.OpenAPITools.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="salesOrder">Sales Order</param>
        /// <param name="salesOrderItem">Sales Order Item</param>
        /// <param name="aPISALESORDERSRVASalesOrderItemPartnerTypeCreate">New entity</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (ASalesOrderItemPartnerType)</returns>
        public async System.Threading.Tasks.Task<Org.OpenAPITools.Client.ApiResponse<ASalesOrderItemPartnerType>> ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPostWithHttpInfoAsync(string salesOrder, string salesOrderItem, APISALESORDERSRVASalesOrderItemPartnerTypeCreate aPISALESORDERSRVASalesOrderItemPartnerTypeCreate, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            // verify the required parameter 'salesOrder' is set
            if (salesOrder == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrder' when calling ItemPartnerApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost");
            }

            // verify the required parameter 'salesOrderItem' is set
            if (salesOrderItem == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'salesOrderItem' when calling ItemPartnerApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost");
            }

            // verify the required parameter 'aPISALESORDERSRVASalesOrderItemPartnerTypeCreate' is set
            if (aPISALESORDERSRVASalesOrderItemPartnerTypeCreate == null)
            {
                throw new Org.OpenAPITools.Client.ApiException(400, "Missing required parameter 'aPISALESORDERSRVASalesOrderItemPartnerTypeCreate' when calling ItemPartnerApi->ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost");
            }


            Org.OpenAPITools.Client.RequestOptions localVarRequestOptions = new Org.OpenAPITools.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = Org.OpenAPITools.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = Org.OpenAPITools.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("SalesOrder", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrder)); // path parameter
            localVarRequestOptions.PathParameters.Add("SalesOrderItem", Org.OpenAPITools.Client.ClientUtils.ParameterToString(salesOrderItem)); // path parameter
            localVarRequestOptions.Data = aPISALESORDERSRVASalesOrderItemPartnerTypeCreate;

            localVarRequestOptions.Operation = "ItemPartnerApi.ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (BasicAuth) required
            // http basic authentication required
            if (!string.IsNullOrEmpty(this.Configuration.Username) || !string.IsNullOrEmpty(this.Configuration.Password) && !localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", "Basic " + Org.OpenAPITools.Client.ClientUtils.Base64Encode(this.Configuration.Username + ":" + this.Configuration.Password));
            }
            // authentication (OAuth2Auth) required
            // oauth required
            if (!localVarRequestOptions.HeaderParameters.ContainsKey("Authorization"))
            {
                if (!string.IsNullOrEmpty(this.Configuration.AccessToken))
                {
                    localVarRequestOptions.HeaderParameters.Add("Authorization", "Bearer " + this.Configuration.AccessToken);
                }
                else if (!string.IsNullOrEmpty(this.Configuration.OAuthTokenUrl) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientId) &&
                         !string.IsNullOrEmpty(this.Configuration.OAuthClientSecret) &&
                         this.Configuration.OAuthFlow != null)
                {
                    localVarRequestOptions.OAuth = true;
                }
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<ASalesOrderItemPartnerType>("/A_SalesOrderItem(SalesOrder='{SalesOrder}',SalesOrderItem='{SalesOrderItem}')/to_Partner", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("ASalesOrderItemSalesOrderSalesOrderSalesOrderItemSalesOrderItemToPartnerPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
